/*
  BEGIN Josh's Custom CSS Reset
  https://www.joshwcomeau.com/css/custom-css-reset/
*/
*, *::before, *::after {
    box-sizing: border-box;
}

* {
    margin: 0;
}

html {
    height: 100%;
    font-family: 'Clear Sans', 'Helvetica Neue', Arial, sans-serif;
}

body {
    height: fit-content;
    line-height: 1.5;
    -webkit-font-smoothing: antialiased;
    background: var(--offWhite);
}

img, picture, video, canvas, svg {
    display: block;
    max-width: 100%;
}

input, button, textarea, select {
    font: inherit;
}

p, h1, h2, h3, h4, h5, h6 {
    overflow-wrap: break-word;
}

/*
  END Josh's Custom CSS Reset
  https://www.joshwcomeau.com/css/custom-css-reset/
*/

:root {
    --offWhite: #f9f9f9;
    --offBlack: #2b2b2b;
    --unknownGrey: #eaeaea;
    --nightGrey: #d8d8d8;
    --matchGreen: #67c85e;
    --absentGrey: #707070;
    --wrongLocationYellow: #d1bd31;
    --errorRed: #e22c2c;
}

span {
    display: inline-flex;
    align-items: center;
}

/*
    Scrolls bar customization
*/

/* Works on Firefox */
* {
    scrollbar-width: thin;
    scrollbar-color: var(--offBlack) var(--absentGrey);
}

/* Works on Chrome, Edge, and Safari */
*::-webkit-scrollbar {
    width: 12px;
}

*::-webkit-scrollbar-track {
    background: var(--offWhite);
    border-radius: 20px;
}

*::-webkit-scrollbar-thumb {
    background-color: var(--nightGrey);
    border-radius: 20px;
}

.night *::-webkit-scrollbar-track {
    background: var(--offBlack);
    border-radius: 20px;
}
.night *::-webkit-scrollbar-thumb {
    background-color: var(--nightGrey);
    border-radius: 20px;
}

/*
    End scrolls bar customization
*/

/*
    Toggle switch, adapted from work of Aditya Bhandari
*/

input[type="checkbox"] {
    display: none;
}

label {
    color: var(--offBlack);
    position: relative;
}

input[type="checkbox"] + label::before {
    content: ' ';
    display: block;
    height: 18px;
    width: 45px;
    border: 1px solid var(--unknownGrey);
    border-radius: 9px;
    position: absolute;
    top: 0px;
    left: -65px;
    background: var(--unknownGrey);
}

input[type="checkbox"] + label::after {
    content: ' ';
    display: block;
    height: 30px;
    width: 30px;
    border: 1px solid var(--errorRed);
    border-radius: 50%;
    position: absolute;
    top: -6px;
    left: -75px;
    background: var(--errorRed);
    transition: all 0.3s ease-in;
}

input[type="checkbox"]:checked + label::after {
    left: -40px;
    transition: all 0.3s ease-in;
    background: var(--matchGreen);
    border-color: var(--matchGreen);
}
/*
    End toggle switch implementation
*/

/*
    Begin radio button customization
    Adapted from work of Mark Heath
    https://markheath.net/post/customize-radio-button-css
*/

.radioContainer { 
    padding: 10px 10px;
}

.radioContainer input[type="radio"] {
    opacity: 0;
    position: fixed;
    width: 0;
}

.radioContainer label, .fakeButton {
    width: calc(33% - 26px);
    margin: 0px 5px;
    padding: 5px;
    border-radius: 5px 5px;
}


.radioContainer input[type="radio"]:focus + label, .radioContainer input[type="radio"]:checked + label {
    opacity: 0.8;
    background: var(--matchGreen);
    color: var(--offWhite);
    cursor: pointer;
}

/*
    End radio button customization
*/

.baseFlex {
    display: -webkit-box; /* OLD - iOS 6-, Safari 3.1-6 */
    display: -moz-box; /* OLD - Firefox 19- (buggy but mostly works) */
    display: -ms-flexbox; /* TWEENER - IE 10 */
    display: -webkit-flex; /* NEW - Chrome */
    display: flex; /* NEW, Spec - Opera 12.1, Firefox 20+ */
    align-content: center;
    justify-content: center;
}

.flexCol {
    flex-direction: column;
}

.flexrow {
    flex-direction: row;
}

.gameboard {
    width: 40%;
    min-width: 330px;
    max-width: 539px;
    border: 3px solid var(--offBlack);
    border-color: var(--offBlack);
    margin: 30px auto;
    position: relative;
}

.boardHeader {
    order: 0;
    max-width: 100%;
    min-height: 60px;
    border-bottom: 3px solid;
    border-color: var(--offBlack);
}

.subHeaderOption, .radioContainer label, .fakeButton {
    flex-grow: 1;
    text-align: center;
    vertical-align: middle;
    font-size: 1em;
    width: calc(33% - 6px);
    font-weight: bold;
    border: 3px solid;
    border-color: var(--offBlack);
}

.subHeaderOption .bi, .detailsColumn .bi {
    padding: 0px 5px;
}

.subHeaderOption:hover, .radioContainer label:hover, .fakeButton:hover, .returnToBoardButton:hover {
    opacity: 0.8;
    background: var(--matchGreen);
    color: var(--offWhite);
    cursor: pointer;
}

.detailsContainer {
    order: 0;
    max-width: 100%;
    min-height: 60px;
    border-bottom: 3px solid;
    border-right: 3px solid;
    border-left: 3px solid;
    border-color: var(--offBlack);
    margin-bottom: 10px;
}

.detailsColumn {
    flex-grow: 1;
    text-align: center;
    width: 33%;
    font-size: 1em;
    font-weight: bold;
    border-bottom: 3px solid;
    border-color: var(--offBlack);
}

.notificationsContainer {
    position: absolute;
    background: var(--offBlack);
    /*min-height: 80px;*/
    width: 94%;
    z-index: 1;
    opacity: 0.97;
    top: 65px;
    right: 3%;
    border: 3px solid;
    color: var(--unknownGrey);
    border-radius: 5px 5px;
    -webkit-transition: all 0s linear;
    -moz-transition: all 0s linear;
    -o-transition: all 0s linear;
    transition: all 0s linear;
    visibility: visible;
    padding: 5px;
}

.helpContainer, .scoreContainer, .settingsContainer {
    position: absolute;
    top: 0;
    left: 0;
    width: calc(100% - 10px);
    height: 100%;
    z-index: 10;
    padding: 5px;
    overflow-x: hidden;
}

.scrollable {
    overflow-y: scroll;
}

.helpContainer p {
    margin: 3px;
}

.notificationsContainer.invisible {
    -webkit-transition: all 0.3s linear;
    -moz-transition: all 0.3s linear;
    -o-transition: all 0.3s linear;
    transition: all 0.3s linear;
    opacity: 0;
}

.notificationsContainer.exactMatch, .night .notificationsContainer.exactMatch {
    border-color: var(--matchGreen);
    background: var(--offBlack);
}

.notificationsContainer.errorRed {
    border-color: var(--errorRed);
}

.boardMain {
    order: 1;
    max-width: 100%;
}

.mainGameContainer {
    width: 100%;
    min-height: 500px;
    padding: 10px 0px;
}

.wordleRow {
    width: calc(100% - 10px);
    margin: 0px 5px;
}

.tileContainer {
    aspect-ratio: 1 / 1;
    width: 18.5%;
    max-width: 92px;
    margin: 3px;
    border: 1px solid var(--nightGrey);
}

.tileContainer.small {
    max-width: 46px;
    aspect-ratio: 1 / 1;
    font-weight: bold;
}

.tile {
    width: 100%;
    height: 100%;
    transition: transform 1s;
    transform-style: preserve-3d;
    position: relative;
}

.tile.flipped {
    transform: rotateY(180deg);
}

.tileBase {
    position: absolute;
    width: 100%;
    height: 100%;
    color: var(--offBlack);
    text-align: center;
    font-weight: bold;
    font-size: 3em;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
}

.tileFront {
    background: var(--unknownGrey);
}

.tileBack {
    transform: rotateY(180deg);
}

.hidden {
    display: none;
}

.invisible {
    visibility: hidden;
}

.night {
    background: var(--offBlack);
}

.night div, .night label {
    background: var(--offBlack);
    color: var(--nightGrey);
    border-color: var(--nightGrey);
}

.exactMatch, .baseKey.exactMatch, .night .exactMatch {
    background: var(--matchGreen);
    color: var(--offWhite);
}

.absent, .baseKey.absent, .night .absent {
    background: var(--absentGrey);
    color: var(--offWhite);
}

.wrongLocation, .baseKey.wrongLocation, .night .wrongLocation {
    background: var(--wrongLocationYellow);
    color: var(--offWhite);
}

i.bi.exactMatch {
    background: inherit;
    color: var(--matchGreen);
}

i.bi.errorRed {
    background: inherit;
    color: var(--errorRed);
}

.keyboardContainer {
    padding-top: 10px;
    margin-top: 10px;
    border-top: 3px solid;
    border-color: var(--offBlack);
}

.baseKey {
    aspect-ratio: 1 / 1;
    width: 8.5%;
}

.bigKey {
    width: 13%;
}

.bigKey, .baseKey {
    background: var(--unknownGrey);
    border: 1px solid var(--nightGrey);
    font-weight: bold;
    margin: 2px;
    cursor: pointer;
    border-radius: 3px 3px;
}

.keyboardRow {
    margin: 5px 0px;
}

.absoluteParent {
    position: relative;
}

table {
    margin: 10px auto;
    border: 3px solid;
    border-color: var(--offBlack);
    border-collapse: collapse;
    font-size: 0.9em;
}


table td, table th {
    padding: 3px;
    border: 1px solid;
    border-color: var(--offBlack);
}

.night table, .night td, .night th {
    border-color: var(--nightGrey);
}

.settingsToggleContainer {
    display: block;
    width: 30%;
    font-weight: bold;
    font-size: 1em;
    margin: 10px auto;
}

.toggle {
    position: relative;
}

p, .settingsToggleContainer label{
    width: 100%;
    display: block;
}

.innerMargin {
    margin: 20px;
}

.fakeButton {
    margin: 10px auto;
}

.playButton {
    font-size: 500%;
    position: absolute;
    top: 20%;
    left: calc(30% - 3px);
    margin: auto;
    width: 40%;
    border: 3px solid var(--matchGreen);
    border-radius: 10px;     
    background: var(--offBlack);
    color: var(--matchGreen);
    z-index: 20;
    cursor: pointer;
}

.night .playButton {
    color: var(--matchGreen);
    border: 3px solid var(--matchGreen);
    background: var(--offBlack);
}

.advancedSettings {
    border: 3px solid;
    border-color: var(--offBlack);
}

.advancedSettings {
    border: 3px solid;
    border-color: var(--offBlack);
    border-radius: 10px;
    font-weight: bold;
}

.advancedSettingsCol {
    width: calc(50%);
    min-height: 130px;
}

.advancedSettingsTitle {
    height: 25%;
}

.advancedSettingsSelector {
    height: 75%;
}

.advancedSettingsSelector input, .advancedSettingsSelector select {
    margin-top: 35px;
    height: 37.5%;
}


.advancedSettingsCol span {
    margin: 10px auto;
}

.advancedSettingsCol:first-child {
    border-right: 3px solid;
}

.advancedSettings .toggle {
    left: calc(50% + 10px);
}

.advancedSettingsCol select, .advancedSettingsCol input {
    width: 80%;
    font-size: 1.5em;
    text-indent: 50%;
    align-content: center;
}

.returnToBoardButton {
    position: absolute;
    top: 0px;
    left: 0px;
    width: 100%;
    height: calc(100%);
    border-bottom: 3px solid;
    border-color: var(--offBlack);
    font-size: 2em;
    font-weight: bold;
}

.statsDesc {
    font-size: 2em;
    font-weight: bold;
    text-align: center;
}

.statsDesc.small {
    font-size: .75em;
}

.singleStatsContainer div {
    padding: 5px 10px;
    margin: 5px;
    border-radius: 5px;
    width: 15%;
    align-items: center;
    border: 1px solid;
}

.guessCountBarContainer {
    width: 70%;
    margin: 5px 10px;
    font-weight: bold;
    justify-content: left;
}

.guessCountBar, .night .guessCountBar {
    width: 100%;
    background: var(--matchGreen);
    color: var(--offWhite);
    font-size: 1em;
    margin-left: 3px;
    text-align: right;
    padding-right: 5px;
    min-width: 35px;
}

