var PDW;$(document).ready(function(){}),function(a){a.EligibleWords=class{constructor(t,e,s=5){if(void 0===t&&void 0!==e||void 0!==t&&void 0===e||void 0===t&&void 0===e)console.log("Values only override when both are submitted. Defaulting to constant values.");else if(void 0!==t&&void 0!==e)this.eligibleAnswers=t,this.eligibleGuesses=e;else{if(5!==s)throw new Error("No word-sets configured for "+s);this.eligibleAnswers=a.FIVE_LETTER_ANSWERS,this.eligibleGuesses=a.FIVE_LETTER_GUESSES}this.buildGuessSearchHelper()}buildGuessSearchHelper(){this.guessSearchHelper=new Map;for(let t=0;t<this.eligibleGuesses.length;t++){var e=this.eligibleGuesses[t][0];this.guessSearchHelper.has(e)||(this.guessSearchHelper.set(e,[t,t]),0!==t&&(this.guessSearchHelper.get(this.eligibleGuesses[t-1][0])[1]=t-1))}this.guessSearchHelper.get(this.eligibleGuesses[this.eligibleGuesses.length-1][0])[1]=this.eligibleGuesses.length-1}guessInWordList(t){let[e,s]=this.guessSearchHelper.get(t[0]);for(console.log(e),console.log(s);e<=s;){var a=e+Math.floor((s-e)/2),i=this.eligibleGuesses[a];if(i===t)return!0;t<i?s=a-1:e=a+1}return!1}}}(PDW=PDW||{}),function(t){t.GameOptions=class{constructor(t=!1,e=6,s=!1,a=600){this.hardMode=t,this.maxGuesses=e,this.maxTimeLimitExists=s,this.maxTimeLimit=a}}}(PDW=PDW||{}),function(t){(t=t.GameType||(t.GameType={}))[t.Single=0]="Single",t[t.Endless=1]="Endless",t[t.ProgressiveDifficulty=2]="ProgressiveDifficulty"}(PDW=PDW||{}),function(n){n.GuessDetails=class{constructor(e,s){this.guess=e,this.characterStates=new Array(5);var a=new Map,i=new Map;for(let t=0;t<s.length;t++)this.updateCharacterMap(a,s,t),this.updateCharacterMap(i,e,t);console.log(i),console.log(a),this.populateCharacterStates(i,a),this.fullMatch=this.characterStates.every(t=>t===n.LetterStatus.ExactMatch)}updateCharacterMap(t,e,s){t.has(e[s])?t.get(e[s]).push(s):t.set(e[s],[s])}populateCharacterStates(t,e){for(var s of t.keys()){var i=t.get(s);if(e.has(s)){let a=e.get(s);if(a.length>=i.length)for(var r of i)this.characterStates[r]=-1<a.indexOf(r)?n.LetterStatus.ExactMatch:n.LetterStatus.WrongLocation;else{let e=0,s=[];for(var o of i){-1<a.indexOf(o)?(this.characterStates[o]=n.LetterStatus.ExactMatch,e+=1):(this.characterStates[o]=n.LetterStatus.Absent,s.push(o));let t=a.length-e;if(0<t)for(t;0<t;t--)this.characterStates[s.shift()]=n.LetterStatus.WrongLocation}}}else for(var a of t.get(s))this.characterStates[a]=n.LetterStatus.Absent}}}}(PDW=PDW||{}),function(t){t.LetterState=class{constructor(){this.ExactMatch=new Map,this.PresentBadLocations=new Map,this.Absent=[]}}}(PDW=PDW||{}),function(t){(t=t.LetterStatus||(t.LetterStatus={}))[t.Unknown=0]="Unknown",t[t.ExactMatch=1]="ExactMatch",t[t.WrongLocation=2]="WrongLocation",t[t.Absent=3]="Absent"}(PDW=PDW||{}),function(t){t.ScoreDetails=class{}}(PDW=PDW||{}),function(t){t.Session=class{}}(PDW=PDW||{}),function(t){t.SessionState=class{}}(PDW=PDW||{}),function(a){a.SingleGame=class{constructor(t,e){this.options=t,this.chosenWord=e.eligibleAnswers[Math.floor(Math.random()*e.eligibleAnswers.length)],this.letterState=new a.LetterState,this.userGuesses=[],this.startTime=new Date,this.eligibleWords=e}guessTrigger(t){return t=t.toLowerCase(),this.validateGuess(t)&&this.finalizeGuess(t),void 0!==this.endTime}validateGuess(e){if(void 0!==this.endTime)return!1;if(this.options.maxGuesses<=this.userGuesses.length)return!1;if(e.match(/[a-z]/g).length!=e.length)return!1;if(this.options.hardMode)for(let t=0;t<e.length;t++)if(this.letterState.ExactMatch.has(t)&&e[t]!=this.letterState.ExactMatch.get(t))return!1;return!!this.eligibleWords.guessInWordList(e)}finalizeGuess(e){e=e.toLowerCase();var s=new a.GuessDetails(e,this.chosenWord);!s.fullMatch&&this.userGuesses.length!==this.options.maxGuesses||(this.endTime=new Date),console.log(s.characterStates);for(let t=0;t<s.characterStates.length;t++)switch(s.characterStates[t]){case a.LetterStatus.ExactMatch:this.letterState.ExactMatch.set(t,e[t]);break;case a.LetterStatus.WrongLocation:this.letterState.PresentBadLocations.has(e[t])&&-1<this.letterState.PresentBadLocations.get(e[t]).indexOf(t)?this.letterState.PresentBadLocations.get(e[t]).push(t):this.letterState.PresentBadLocations.has(e[t])||this.letterState.PresentBadLocations.set(e[t],[t]);break;case a.LetterStatus.Absent:-1===this.letterState.Absent.indexOf(e[t])&&this.letterState.Absent.push(e[t]);break;default:throw new Error(`Invalid status for guess input at ${t}: status of `+s.characterStates[t])}this.userGuesses.push(s)}}}(PDW=PDW||{});