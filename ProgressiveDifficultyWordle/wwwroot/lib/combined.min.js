$(document).ready(function(){console.log("Not yet implemented.")}),Object.defineProperty(exports,"__esModule",{value:!0}),exports.EligibleWords=void 0;const FiveLetterGuesses_1=require("../Constants/Words/FiveLetterGuesses"),FiveLetterAnswers_1=require("../Constants/Words/FiveLetterAnswers");class EligibleWords{constructor(e,t,s=5){if(void 0!==e&&void 0!==t?(this.eligibleAnswers=e,this.eligibleGuesses=t):(void 0!==e&&void 0===t||void 0===e&&void 0!==t)&&console.log("Both eligibleAnswers and eligibleGuesses must be supplied to not rely on constants."),void 0===this.eligibleAnswers&&void 0===this.eligibleGuesses){if(5!==s)throw new Error("No word-sets configured for letterCount="+s);this.eligibleAnswers=FiveLetterAnswers_1.FIVE_LETTER_ANSWERS,this.eligibleGuesses=FiveLetterGuesses_1.FIVE_LETTER_GUESSES}this.buildGuessSearchHelper()}buildGuessSearchHelper(){this.guessSearchHelper=new Map;for(let e=0;e<this.eligibleGuesses.length;e++){var t=this.eligibleGuesses[e][0];this.guessSearchHelper.has(t)||(this.guessSearchHelper.set(t,[e,e]),0!==e&&(this.guessSearchHelper.get(this.eligibleGuesses[e-1][0])[1]=e-1))}this.guessSearchHelper.get(this.eligibleGuesses[this.eligibleGuesses.length-1][0])[1]=this.eligibleGuesses.length-1}guessInWordList(e){if(!this.guessSearchHelper.has(e[0]))return!1;let[t,s]=this.guessSearchHelper.get(e[0]);for(console.log(t),console.log(s);t<=s;){var i=t+Math.floor((s-t)/2),a=this.eligibleGuesses[i];if(a===e)return!0;e<a?s=i-1:t=i+1}return!1}}exports.EligibleWords=EligibleWords,Object.defineProperty(exports,"__esModule",{value:!0}),exports.GameOptions=void 0;class GameOptions{constructor(e=!1,t=6,s=!1,i=600){this.hardMode=e,this.maxGuesses=t,this.maxTimeLimitExists=s,this.maxTimeLimit=i}}var GameType,LetterStatus;exports.GameOptions=GameOptions,Object.defineProperty(exports,"__esModule",{value:!0}),exports.GameType=void 0,function(e){e[e.Single=0]="Single",e[e.Endless=1]="Endless",e[e.ProgressiveDifficulty=2]="ProgressiveDifficulty"}(GameType=exports.GameType||(exports.GameType={})),Object.defineProperty(exports,"__esModule",{value:!0}),exports.GuessDetails=void 0;const LetterStatus_1=require("./LetterStatus");class GuessDetails{constructor(t,s){this.guess=t,this.characterStates=new Array(t.length);var i=new Map,a=new Map;for(let e=0;e<s.length;e++)this.buildCharacterMap(i,s,e),this.buildCharacterMap(a,t,e);this.populateCharacterStates(a,i),this.fullMatch=this.characterStates.every(e=>e===LetterStatus_1.LetterStatus.ExactMatch)}buildCharacterMap(e,t,s){e.has(t[s])?e.get(t[s]).push(s):e.set(t[s],[s])}populateCharacterStates(e,t){for(const i of e.keys()){var s=e.get(i);if(t.has(i)){const a=t.get(i);if(a.length>=s.length)for(const r of s)this.characterStates[r]=-1<a.indexOf(r)?LetterStatus_1.LetterStatus.ExactMatch:LetterStatus_1.LetterStatus.WrongLocation;else{let t=0;const o=[];for(const n of s){-1<a.indexOf(n)?(this.characterStates[n]=LetterStatus_1.LetterStatus.ExactMatch,t+=1):(this.characterStates[n]=LetterStatus_1.LetterStatus.Absent,o.push(n));let e=a.length-t;if(0<e)for(e;0<e;e--)this.characterStates[o.shift()]=LetterStatus_1.LetterStatus.WrongLocation}}}else for(const h of e.get(i))this.characterStates[h]=LetterStatus_1.LetterStatus.Absent}}}exports.GuessDetails=GuessDetails,Object.defineProperty(exports,"__esModule",{value:!0}),exports.LetterState=void 0;class LetterState{constructor(){this.ExactMatch=new Map,this.PresentBadLocations=new Map,this.Absent=[]}}exports.LetterState=LetterState,Object.defineProperty(exports,"__esModule",{value:!0}),exports.LetterStatus=void 0,function(e){e[e.Unknown=0]="Unknown",e[e.ExactMatch=1]="ExactMatch",e[e.WrongLocation=2]="WrongLocation",e[e.Absent=3]="Absent"}(LetterStatus=exports.LetterStatus||(exports.LetterStatus={})),Object.defineProperty(exports,"__esModule",{value:!0}),exports.ScoreDetails=void 0;class ScoreDetails{constructor(){this.totalScore=0,this.roundsCompleted=0,this.startingGuesses=new Set}updateScore(t){if(void 0===this.endTime){var s,i=t.userGuesses.length;let e=0;0<i&&(s=t.userGuesses[i-1],e=s.fullMatch?1e3:0,e+=500*ScoreDetails.ROUND_SCORE_GUESS_MULTIPLIERS[i-1],(s=Math.floor((t.endTime.getTime()-t.startTime.getTime())/6e4))<=4&&(e=2*e/Math.sqrt(s)),this.startingGuesses.has(t.userGuesses[0].guess)?e*=.75:this.startingGuesses.add(t.userGuesses[0].guess)),0===e?this.endTime=t.endTime:(this.totalScore+=e,this.roundsCompleted+=1,this.totalScore=this.totalScore*(Math.log(100+this.roundsCompleted)/Math.log(100)))}}}(exports.ScoreDetails=ScoreDetails).ROUND_SCORE_GUESS_MULTIPLIERS=[2,1.5,1.25,1,.8,.5],Object.defineProperty(exports,"__esModule",{value:!0}),exports.Session=void 0;const GameType_1=require("./GameType"),ScoreDetails_1=require("./ScoreDetails"),SingleGame_1=require("./SingleGame"),SessionState_1=require("./SessionState"),GameOptions_1=require("./GameOptions"),EligibleWords_1=require("./EligibleWords"),NotificationWrapper_1=require("./Notification/NotificationWrapper"),NotificationType_1=require("./Notification/NotificationType");class Session{constructor(e,t,s,i){this.type=e,this.messaging=s,this.score=new ScoreDetails_1.ScoreDetails,this.state=new SessionState_1.SessionState(t),this.boardBinder=i,this.generateGame(),this.state.startTime=this.currentGame.startTime}generateGame(){this.currentGame=new SingleGame_1.SingleGame(this.generateGameOptions(),new EligibleWords_1.EligibleWords,this.messaging)}generateGameOptions(){return new GameOptions_1.GameOptions(this.state.hardMode,this.state.maxGuesses,this.state.gameTimerLimitExists,this.state.gameTimerLength)}next(e){this.state.active?this.type===GameType_1.GameType.Single?(this.currentGame.finalizeGuess(e),this.paintBoard(),this.state.active=void 0===this.currentGame.endTime):(this.currentGame.finalizeGuess(e),this.paintBoard(),this.currentGame.solved()?this.anotherGame():this.currentGame.endTime&&(this.state.active=!1,this.messaging.message=new NotificationWrapper_1.NotificationWrapper(NotificationType_1.NotificationType.Error,"Unsuccessfully solved. To keep playing, you will need a new session."))):this.messaging.message=new NotificationWrapper_1.NotificationWrapper(NotificationType_1.NotificationType.Error,"The session has ended. To keep playing, you will need a new session.")}anotherGame(){this.state.gameHistory.push(this.currentGame),this.type===GameType_1.GameType.ProgressiveDifficulty&&this.getHarder(),this.generateGame(),this.paintBoard()}getHarder(){switch(this.score.roundsCompleted){case 3:this.state.gameTimerLimitExists=!0,this.state.gameTimerLength=600;break;case 5:case 7:case 11:case 13:case 17:this.state.gameTimerLength-=60;break;case 19:case 21:case 23:case 25:case 27:case 29:this.state.gameTimerLength-=30;break;case 9:case 15:case 30:--this.state.maxGuesses;break;default:console.log("No difficulty increase.")}}paintBoard(e){e=null!=e?e:this.currentGame,this.boardBinder(e.userGuesses.map(e=>e.guess),e.userGuesses.map(e=>e.characterStates))}}exports.Session=Session,Object.defineProperty(exports,"__esModule",{value:!0}),exports.SessionState=void 0;class SessionState{constructor(e){this.gameHistory=[],this.active=!0,this.startTime=new Date,this.gameTimerLimitExists=!1,this.hardMode=e,this.maxGuesses=6}}exports.SessionState=SessionState,Object.defineProperty(exports,"__esModule",{value:!0}),exports.SingleGame=void 0;const GuessDetails_1=require("./GuessDetails"),LetterStatus_1=require("./LetterStatus"),LetterState_1=require("./LetterState"),NotificationWrapper_1=require("./Notification/NotificationWrapper"),NotificationType_1=require("./Notification/NotificationType");class SingleGame{constructor(e,t,s){this.options=e,this.chosenWord=t.eligibleAnswers[Math.floor(Math.random()*t.eligibleAnswers.length)],this.letterState=new LetterState_1.LetterState,this.userGuesses=[],this.startTime=new Date,this.eligibleWords=t,this.messaging=s}guessTrigger(e){return e=e.toLowerCase(),this.validateGuess(e)&&this.finalizeGuess(e),void 0!==this.endTime}validateGuess(t){if(void 0!==this.endTime)return this.messaging.message=new NotificationWrapper_1.NotificationWrapper(NotificationType_1.NotificationType.Error,"The game has already ended."),!1;if(this.options.maxGuesses<=this.userGuesses.length)return this.messaging.message=new NotificationWrapper_1.NotificationWrapper(NotificationType_1.NotificationType.Error,NotificationWrapper_1.NotificationWrapper.interpolateMessage("Exceeded max number (REPLACEMENT=>text) of guesses.",this.options.maxGuesses.toString())),!1;var e=t.match(/[a-z]/g);if(null===e||e.length!=this.chosenWord.length)return this.messaging.message=new NotificationWrapper_1.NotificationWrapper(NotificationType_1.NotificationType.Error,"Invalid input."),!1;if(this.options.hardMode)for(let e=0;e<t.length;e++)if(this.letterState.ExactMatch.has(e)&&t[e]!=this.letterState.ExactMatch.get(e))return this.messaging.message=new NotificationWrapper_1.NotificationWrapper(NotificationType_1.NotificationType.Error,NotificationWrapper_1.NotificationWrapper.interpolateMessage("Hard mode rules violated: REPLACEMENT=>text.",`'${this.letterState.ExactMatch.get(e)}' must be present at character index ${e} of `+(t.length-1))),!1;return!!this.eligibleWords.guessInWordList(t)||(this.messaging.message=new NotificationWrapper_1.NotificationWrapper(NotificationType_1.NotificationType.Error,"Guess is not in word list."),!1)}finalizeGuess(t){var s=new GuessDetails_1.GuessDetails(t,this.chosenWord);this.userGuesses.push(s);for(let e=0;e<s.characterStates.length;e++)switch(s.characterStates[e]){case LetterStatus_1.LetterStatus.ExactMatch:this.letterState.ExactMatch.set(e,t[e]);break;case LetterStatus_1.LetterStatus.WrongLocation:this.letterState.PresentBadLocations.has(t[e])&&-1<this.letterState.PresentBadLocations.get(t[e]).indexOf(e)?this.letterState.PresentBadLocations.get(t[e]).push(e):this.letterState.PresentBadLocations.has(t[e])||this.letterState.PresentBadLocations.set(t[e],[e]);break;case LetterStatus_1.LetterStatus.Absent:-1===this.letterState.Absent.indexOf(t[e])&&this.letterState.Absent.push(t[e]);break;default:throw new Error(`Invalid status for guess input at ${e}: status of `+s.characterStates[e])}this.solved()?(this.messaging.message=new NotificationWrapper_1.NotificationWrapper(NotificationType_1.NotificationType.Info,"Successful solve!"),this.endTime=new Date):this.userGuesses.length>=this.options.maxGuesses&&void 0===this.endTime&&(this.messaging.message=new NotificationWrapper_1.NotificationWrapper(NotificationType_1.NotificationType.Error,NotificationWrapper_1.NotificationWrapper.interpolateMessage("Exceeded max number (REPLACEMENT=>text) of guesses.",this.options.maxGuesses.toString())),this.endTime=new Date)}solved(){return this.userGuesses[this.userGuesses.length-1].fullMatch}}exports.SingleGame=SingleGame;